{"version":3,"sources":["components/Searchbar/Searchbar.js","services/pixabay-api.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["SearchBar","state","searchValue","handlerSubmit","e","preventDefault","props","onSubmit","handlerChange","setState","target","value","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","pixabaySearchPictures","baseURL","key_api","_query","_page","perPage","number","axios","defaults","get","then","result","data","hits","ImageGalleryItem","src","alt","dataSource","onClick","BtnLoadMore","Spinner","color","height","width","timeout","modalRoot","document","getElementById","Modal","listenerForCloseWindow","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","url","createPortal","defaultProps","search","ImageGallery","searchResults","isLoaded","showModal","activePictureUrl","activePictureAlt","searchPicture","searchPictures","res","length","prevState","catch","error","console","log","handleClickBtn","page","toggleModal","handleClickPicture","source","dataset","query","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","map","picture","webformatURL","tags","largeImageURL","id","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a9020402.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Serachbar.css';\n\nexport default class SearchBar extends Component {\n  state = {\n    searchValue: '',\n  };\n\n  handlerSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.searchValue);\n  };\n\n  handlerChange = e => {\n    this.setState({ searchValue: e.target.value });\n  };\n\n  render() {\n    const { handlerSubmit, handlerChange } = this;\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={handlerSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.searchValue}\n            onChange={handlerChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import axios from 'axios';\n\nexport class pixabaySearchPictures {\n  constructor() {\n    this.baseURL = 'https://pixabay.com/api/';\n    this.key_api = '23114500-22e254b478d4c1f3e17503cc3';\n    this._query = '';\n    this._page = 1;\n    this.perPage = 12;\n  }\n  get query() {\n    return this._query;\n  }\n  set query(value) {\n    return (this._query = value);\n  }\n\n  get page() {\n    return this._page;\n  }\n  set page(number) {\n    return (this._page = number);\n  }\n\n  searchPictures() {\n    axios.defaults.baseURL = this.baseURL;\n    return axios\n      .get(\n        `?q=${this._query}&page=${this._page}&key=${this.key_api}&image_type=photo&orientation=horizontal&per_page=${this.perPage}`,\n      )\n      .then(result => result.data.hits);\n  }\n}\n","import './ImageGalleryItem.css';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({ src, alt, dataSource, onClick }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={src}\n        alt={alt}\n        className=\"ImageGalleryItem-image\"\n        onClick={onClick}\n        data-source={dataSource}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  dataSource: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import './Button.css';\nimport PropTypes from 'prop-types';\n\nexport default function BtnLoadMore({ onClick }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nBtnLoadMore.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport './Loader.css';\n\nexport default class Spinner extends Component {\n  //other logic\n  render() {\n    return (\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#3f51b5\"\n        className=\"Loader\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs\n      />\n    );\n  }\n}\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.listenerForCloseWindow);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.listenerForCloseWindow);\n  }\n\n  listenerForCloseWindow = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { url, alt } = this.props;\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={url} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  url: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nModal.defaultProps = {\n  alt: 'Modal for current picture',\n};\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './ImageGallery.css';\nimport { pixabaySearchPictures } from '../../services/pixabay-api';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport BtnLoadMore from '../Button';\nimport Spinner from '../Loader';\nimport Modal from '../Modal';\n\nconst search = new pixabaySearchPictures();\n\nexport default class ImageGallery extends Component {\n  state = {\n    searchResults: [],\n    isLoaded: false,\n    showModal: false,\n    activePictureUrl: '',\n    activePictureAlt: '',\n  };\n\n  componentDidMount() {\n    search.query = this.props.searchValue;\n    this.searchPicture();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevProps.searchValue;\n    const nextQuery = this.props.searchValue;\n    if (prevQuery !== nextQuery) {\n      this.setState({ searchResults: [] });\n      search.page = 1;\n      search.query = this.props.searchValue;\n      this.searchPicture();\n    }\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  searchPicture = () => {\n    this.setState({ isLoaded: true });\n    search\n      .searchPictures()\n      .then(res => {\n        if (res.length > 0) {\n          this.setState(prevState => ({\n            searchResults: [...prevState.searchResults, ...res],\n            isLoaded: false,\n          }));\n        }\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleClickBtn = () => {\n    search.page += 1;\n    this.searchPicture();\n  };\n\n  toggleModal = () => {\n    this.setState(prevState => ({ showModal: !prevState.showModal }));\n  };\n\n  handleClickPicture = e => {\n    this.toggleModal();\n    const {\n      dataset: { source },\n      alt,\n    } = e.target;\n    this.setState({ activePictureUrl: source, activePictureAlt: alt });\n  };\n\n  render() {\n    const {\n      searchResults,\n      isLoaded,\n      showModal,\n      activePictureUrl,\n      activePictureAlt,\n    } = this.state;\n    const { handleClickBtn, handleClickPicture, toggleModal } = this;\n\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          {searchResults.length > 0 &&\n            searchResults.map(picture => (\n              <ImageGalleryItem\n                key={picture.id}\n                src={picture.webformatURL}\n                alt={picture.tags}\n                onClick={handleClickPicture}\n                dataSource={picture.largeImageURL}\n              />\n            ))}\n        </ul>\n        {isLoaded ? (\n          <Spinner />\n        ) : (\n          searchResults.length > 0 && <BtnLoadMore onClick={handleClickBtn} />\n        )}\n        {showModal && (\n          <Modal\n            onClose={toggleModal}\n            url={activePictureUrl}\n            alt={activePictureAlt}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n};\n","import './App.css';\nimport { Component } from 'react';\nimport SearchBar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nclass App extends Component {\n  state = {\n    searchValue: '',\n  };\n  onSubmit = value => {\n    this.setState({ searchValue: value });\n  };\n  render() {\n    const { onSubmit } = this;\n    const { searchValue } = this.state;\n\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={onSubmit} />\n        {searchValue !== '' && <ImageGallery searchValue={searchValue} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}